<el-card class="config-card" header="性能参数配置">
    <el-form :model="equipmentConfig.performance" :rules="performanceRules" ref="performanceForm" label-width="150px">
        <!-- 事件报告限制 -->
        <el-divider content-position="left">事件报告配置</el-divider>
        <el-row :gutter="24">
            <el-col :span="12">
                <el-form-item label="最大事件报告数" prop="maxEventReports">
                    <el-input-number
                        v-model="equipmentConfig.performance.maxEventReports"
                        :min="10"
                        :max="1000"
                        style="width: 100%">
                    </el-input-number>
                    <div class="form-help-text">系统可处理的最大事件报告数量</div>
                </el-form-item>
            </el-col>
            <el-col :span="12">
                <el-form-item label="最大报警数" prop="maxAlarms">
                    <el-input-number
                        v-model="equipmentConfig.performance.maxAlarms"
                        :min="5"
                        :max="500"
                        style="width: 100%">
                    </el-input-number>
                    <div class="form-help-text">系统可处理的最大报警数量</div>
                </el-form-item>
            </el-col>
        </el-row>

        <!-- 数据大小限制 -->
        <el-divider content-position="left">数据存储配置</el-divider>
        <el-row :gutter="24">
            <el-col :span="12">
                <el-form-item label="最大跟踪数据(MB)" prop="maxTraceDataSize">
                    <el-slider
                        v-model="traceDataSizeMB"
                        :min="1"
                        :max="100"
                        :step="1"
                        show-stops
                        show-input
                        style="width: 100%">
                    </el-slider>
                    <div class="form-help-text">跟踪数据缓存的最大大小</div>
                </el-form-item>
            </el-col>
            <el-col :span="12">
                <el-form-item label="最大假脱机(MB)" prop="maxSpoolSize">
                    <el-slider
                        v-model="spoolSizeMB"
                        :min="1"
                        :max="200"
                        :step="1"
                        show-stops
                        show-input
                        style="width: 100%">
                    </el-slider>
                    <div class="form-help-text">消息假脱机的最大大小</div>
                </el-form-item>
            </el-col>
        </el-row>

        <!-- 缓存配置 -->
        <el-divider content-position="left">缓存配置</el-divider>
        <el-row :gutter="24">
            <el-col :span="8">
                <el-form-item label="启用数据缓存">
                    <el-switch
                        v-model="equipmentConfig.performance.enableDataCache"
                        active-text="启用"
                        inactive-text="禁用">
                    </el-switch>
                </el-form-item>
            </el-col>
            <el-col :span="8">
                <el-form-item label="缓存超时(秒)" v-if="equipmentConfig.performance.enableDataCache">
                    <el-input-number
                        v-model="equipmentConfig.performance.cacheTimeout"
                        :min="1"
                        :max="3600"
                        style="width: 100%">
                    </el-input-number>
                </el-form-item>
            </el-col>
            <el-col :span="8">
                <el-form-item label="清理间隔(分钟)" v-if="equipmentConfig.performance.enableDataCache">
                    <el-input-number
                        v-model="equipmentConfig.performance.cleanupInterval"
                        :min="1"
                        :max="60"
                        style="width: 100%">
                    </el-input-number>
                </el-form-item>
            </el-col>
        </el-row>

        <!-- 性能监控 -->
        <el-divider content-position="left">性能监控</el-divider>
        <el-row :gutter="24">
            <el-col :span="12">
                <el-form-item label="启用性能统计">
                    <el-switch
                        v-model="equipmentConfig.performance.enablePerfStats"
                        active-text="启用"
                        inactive-text="禁用">
                    </el-switch>
                </el-form-item>
            </el-col>
            <el-col :span="12">
                <el-form-item label="统计间隔(秒)" v-if="equipmentConfig.performance.enablePerfStats">
                    <el-input-number
                        v-model="equipmentConfig.performance.statsInterval"
                        :min="10"
                        :max="300"
                        style="width: 100%">
                    </el-input-number>
                </el-form-item>
            </el-col>
        </el-row>

        <!-- 实时性能指标 -->
        <el-divider content-position="left">实时性能指标</el-divider>
        <el-row :gutter="16">
            <el-col :span="6">
                <el-card class="performance-metric">
                    <el-statistic title="CPU使用率" :value="performanceMetrics.cpuUsage" suffix="%">
                        <template #prefix>
                            <el-icon style="color: #f56c6c;"><Monitor /></el-icon>
                        </template>
                    </el-statistic>
                    <el-progress :percentage="performanceMetrics.cpuUsage" :color="getCpuColor(performanceMetrics.cpuUsage)"></el-progress>
                </el-card>
            </el-col>
            <el-col :span="6">
                <el-card class="performance-metric">
                    <el-statistic title="内存使用率" :value="performanceMetrics.memoryUsage" suffix="%">
                        <template #prefix>
                            <el-icon style="color: #409eff;"><Cpu /></el-icon>
                        </template>
                    </el-statistic>
                    <el-progress :percentage="performanceMetrics.memoryUsage" :color="getMemoryColor(performanceMetrics.memoryUsage)"></el-progress>
                </el-card>
            </el-col>
            <el-col :span="6">
                <el-card class="performance-metric">
                    <el-statistic title="消息队列" :value="performanceMetrics.messageQueue">
                        <template #prefix>
                            <el-icon style="color: #67c23a;"><Message /></el-icon>
                        </template>
                    </el-statistic>
                    <div class="metric-desc">当前待处理消息数</div>
                </el-card>
            </el-col>
            <el-col :span="6">
                <el-card class="performance-metric">
                    <el-statistic title="响应时间" :value="performanceMetrics.responseTime" suffix="ms">
                        <template #prefix>
                            <el-icon style="color: #e6a23c;"><Timer /></el-icon>
                        </template>
                    </el-statistic>
                    <div class="metric-desc">平均消息响应时间</div>
                </el-card>
            </el-col>
        </el-row>

        <!-- 线程池配置 -->
        <el-divider content-position="left">线程池配置</el-divider>
        <el-row :gutter="24">
            <el-col :span="8">
                <el-form-item label="最小线程数">
                    <el-input-number
                        v-model="equipmentConfig.performance.minThreads"
                        :min="1"
                        :max="50"
                        style="width: 100%">
                    </el-input-number>
                </el-form-item>
            </el-col>
            <el-col :span="8">
                <el-form-item label="最大线程数">
                    <el-input-number
                        v-model="equipmentConfig.performance.maxThreads"
                        :min="1"
                        :max="100"
                        style="width: 100%">
                    </el-input-number>
                </el-form-item>
            </el-col>
            <el-col :span="8">
                <el-form-item label="队列大小">
                    <el-input-number
                        v-model="equipmentConfig.performance.queueSize"
                        :min="10"
                        :max="1000"
                        style="width: 100%">
                    </el-input-number>
                </el-form-item>
            </el-col>
        </el-row>

        <!-- 自动调优设置 -->
        <el-divider content-position="left">自动调优</el-divider>
        <el-row :gutter="24">
            <el-col :span="12">
                <el-form-item label="启用自动调优">
                    <el-switch
                        v-model="equipmentConfig.performance.enableAutoTuning"
                        active-text="启用"
                        inactive-text="禁用">
                    </el-switch>
                    <div class="form-help-text">根据负载自动调整性能参数</div>
                </el-form-item>
            </el-col>
            <el-col :span="12">
                <el-form-item label="调优策略" v-if="equipmentConfig.performance.enableAutoTuning">
                    <el-select v-model="equipmentConfig.performance.tuningStrategy" style="width: 100%">
                        <el-option label="保守调优" value="conservative"></el-option>
                        <el-option label="平衡调优" value="balanced"></el-option>
                        <el-option label="积极调优" value="aggressive"></el-option>
                    </el-select>
                </el-form-item>
            </el-col>
        </el-row>

        <!-- 性能阈值设置 -->
        <el-collapse style="margin-top: 20px;">
            <el-collapse-item title="性能阈值设置" name="thresholds">
                <el-form label-width="120px">
                    <el-row :gutter="24">
                        <el-col :span="12">
                            <el-form-item label="CPU阈值(%)">
                                <el-slider
                                    v-model="equipmentConfig.performance.cpuThreshold"
                                    :min="50"
                                    :max="95"
                                    show-input>
                                </el-slider>
                            </el-form-item>
                        </el-col>
                        <el-col :span="12">
                            <el-form-item label="内存阈值(%)">
                                <el-slider
                                    v-model="equipmentConfig.performance.memoryThreshold"
                                    :min="50"
                                    :max="95"
                                    show-input>
                                </el-slider>
                            </el-form-item>
                        </el-col>
                    </el-row>
                    <el-row :gutter="24">
                        <el-col :span="12">
                            <el-form-item label="响应时间阈值(ms)">
                                <el-input-number
                                    v-model="equipmentConfig.performance.responseTimeThreshold"
                                    :min="100"
                                    :max="5000"
                                    style="width: 100%">
                                </el-input-number>
                            </el-form-item>
                        </el-col>
                        <el-col :span="12">
                            <el-form-item label="队列长度阈值">
                                <el-input-number
                                    v-model="equipmentConfig.performance.queueLengthThreshold"
                                    :min="10"
                                    :max="500"
                                    style="width: 100%">
                                </el-input-number>
                            </el-form-item>
                        </el-col>
                    </el-row>
                </el-form>
            </el-collapse-item>
        </el-collapse>

        <!-- 配置说明 -->
        <el-alert
            title="性能配置建议"
            type="info"
            :closable="false"
            show-icon
            style="margin-top: 20px;">
            <template #default>
                <ul style="margin: 0; padding-left: 20px;">
                    <li>根据实际硬件配置调整线程池大小</li>
                    <li>启用自动调优可以动态优化性能</li>
                    <li>合理设置阈值避免频繁的性能警告</li>
                    <li>定期监控性能指标确保系统稳定运行</li>
                </ul>
            </template>
        </el-alert>
    </el-form>
</el-card>

<script>
// 性能配置数据和方法
export default {
    data() {
        return {
            performanceMetrics: {
                cpuUsage: 25,
                memoryUsage: 45,
                messageQueue: 12,
                responseTime: 85
            },
            
            performanceRules: {
                maxEventReports: [
                    { type: 'number', min: 10, max: 1000, message: '事件报告数范围10-1000', trigger: 'blur' }
                ],
                maxAlarms: [
                    { type: 'number', min: 5, max: 500, message: '报警数范围5-500', trigger: 'blur' }
                ]
            }
        };
    },
    
    computed: {
        traceDataSizeMB: {
            get() {
                return Math.round(this.equipmentConfig.performance.maxTraceDataSize / 1048576);
            },
            set(value) {
                this.equipmentConfig.performance.maxTraceDataSize = value * 1048576;
            }
        },
        
        spoolSizeMB: {
            get() {
                return Math.round(this.equipmentConfig.performance.maxSpoolSize / 1048576);
            },
            set(value) {
                this.equipmentConfig.performance.maxSpoolSize = value * 1048576;
            }
        }
    },
    
    mounted() {
        this.initializePerformanceDefaults();
        this.startPerformanceMonitoring();
    },
    
    methods: {
        initializePerformanceDefaults() {
            const defaults = {
                enableDataCache: false,
                cacheTimeout: 300,
                cleanupInterval: 10,
                enablePerfStats: true,
                statsInterval: 30,
                minThreads: 2,
                maxThreads: 10,
                queueSize: 100,
                enableAutoTuning: false,
                tuningStrategy: 'balanced',
                cpuThreshold: 80,
                memoryThreshold: 85,
                responseTimeThreshold: 1000,
                queueLengthThreshold: 50
            };
            
            Object.keys(defaults).forEach(key => {
                if (!(key in this.equipmentConfig.performance)) {
                    this.equipmentConfig.performance[key] = defaults[key];
                }
            });
        },
        
        startPerformanceMonitoring() {
            setInterval(() => {
                this.updatePerformanceMetrics();
            }, 2000);
        },
        
        updatePerformanceMetrics() {
            this.performanceMetrics.cpuUsage = Math.max(10, Math.min(90, 
                this.performanceMetrics.cpuUsage + (Math.random() - 0.5) * 10));
            this.performanceMetrics.memoryUsage = Math.max(20, Math.min(80, 
                this.performanceMetrics.memoryUsage + (Math.random() - 0.5) * 8));
            this.performanceMetrics.messageQueue = Math.max(0, 
                this.performanceMetrics.messageQueue + Math.floor((Math.random() - 0.5) * 6));
            this.performanceMetrics.responseTime = Math.max(50, Math.min(200, 
                this.performanceMetrics.responseTime + (Math.random() - 0.5) * 20));
        },
        
        getCpuColor(value) {
            if (value < 50) return '#67c23a';
            if (value < 80) return '#e6a23c';
            return '#f56c6c';
        },
        
        getMemoryColor(value) {
            if (value < 60) return '#67c23a';
            if (value < 85) return '#e6a23c';
            return '#f56c6c';
        }
    }
};
</script>

<style scoped>
.form-help-text {
    font-size: 12px;
    color: #909399;
    margin-top: 4px;
}

.performance-metric {
    text-align: center;
    margin: 5px 0;
}

.performance-metric .el-progress {
    margin-top: 10px;
}

.metric-desc {
    font-size: 12px;
    color: #909399;
    margin-top: 8px;
}

.el-divider {
    margin: 20px 0;
}
</style>